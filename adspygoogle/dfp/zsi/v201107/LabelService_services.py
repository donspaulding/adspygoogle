################################################## 
# LabelService_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from LabelService_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class LabelServiceLocator:
    LabelServiceInterface_address = "https://www.google.com:443/apis/ads/publisher/v201107/LabelService"
    def getLabelServiceInterfaceAddress(self):
        return LabelServiceLocator.LabelServiceInterface_address
    def getLabelServiceInterface(self, url=None, **kw):
        return LabelServiceSoapBindingSOAP(url or LabelServiceLocator.LabelServiceInterface_address, **kw)

# Methods
class LabelServiceSoapBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: createLabel
    def createLabel(self, request):
        if isinstance(request, createLabelRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(createLabelResponse.typecode)
        return response

    # op: createLabels
    def createLabels(self, request):
        if isinstance(request, createLabelsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(createLabelsResponse.typecode)
        return response

    # get: getLabel
    def getLabel(self, request):
        if isinstance(request, getLabelRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(getLabelResponse.typecode)
        return response

    # get: getLabelsByStatement
    def getLabelsByStatement(self, request):
        if isinstance(request, getLabelsByStatementRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(getLabelsByStatementResponse.typecode)
        return response

    # op: performLabelAction
    def performLabelAction(self, request):
        if isinstance(request, performLabelActionRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(performLabelActionResponse.typecode)
        return response

    # op: updateLabel
    def updateLabel(self, request):
        if isinstance(request, updateLabelRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(updateLabelResponse.typecode)
        return response

    # op: updateLabels
    def updateLabels(self, request):
        if isinstance(request, updateLabelsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(updateLabelsResponse.typecode)
        return response

createLabelRequest = ns0.createLabel_Dec().pyclass

createLabelResponse = ns0.createLabelResponse_Dec().pyclass

createLabelsRequest = ns0.createLabels_Dec().pyclass

createLabelsResponse = ns0.createLabelsResponse_Dec().pyclass

getLabelRequest = ns0.getLabel_Dec().pyclass

getLabelResponse = ns0.getLabelResponse_Dec().pyclass

getLabelsByStatementRequest = ns0.getLabelsByStatement_Dec().pyclass

getLabelsByStatementResponse = ns0.getLabelsByStatementResponse_Dec().pyclass

performLabelActionRequest = ns0.performLabelAction_Dec().pyclass

performLabelActionResponse = ns0.performLabelActionResponse_Dec().pyclass

updateLabelRequest = ns0.updateLabel_Dec().pyclass

updateLabelResponse = ns0.updateLabelResponse_Dec().pyclass

updateLabelsRequest = ns0.updateLabels_Dec().pyclass

updateLabelsResponse = ns0.updateLabelsResponse_Dec().pyclass
