################################################## 
# ThirdPartySlotService_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from ThirdPartySlotService_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class ThirdPartySlotServiceLocator:
    ThirdPartySlotServiceInterface_address = "https://www.google.com:443/apis/ads/publisher/v201108/ThirdPartySlotService"
    def getThirdPartySlotServiceInterfaceAddress(self):
        return ThirdPartySlotServiceLocator.ThirdPartySlotServiceInterface_address
    def getThirdPartySlotServiceInterface(self, url=None, **kw):
        return ThirdPartySlotServiceSoapBindingSOAP(url or ThirdPartySlotServiceLocator.ThirdPartySlotServiceInterface_address, **kw)

# Methods
class ThirdPartySlotServiceSoapBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: createThirdPartySlot
    def createThirdPartySlot(self, request):
        if isinstance(request, createThirdPartySlotRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(createThirdPartySlotResponse.typecode)
        return response

    # get: getThirdPartySlotsByStatement
    def getThirdPartySlotsByStatement(self, request):
        if isinstance(request, getThirdPartySlotsByStatementRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(getThirdPartySlotsByStatementResponse.typecode)
        return response

    # op: performThirdPartySlotAction
    def performThirdPartySlotAction(self, request):
        if isinstance(request, performThirdPartySlotActionRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(performThirdPartySlotActionResponse.typecode)
        return response

    # op: updateThirdPartySlot
    def updateThirdPartySlot(self, request):
        if isinstance(request, updateThirdPartySlotRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(updateThirdPartySlotResponse.typecode)
        return response

createThirdPartySlotRequest = ns0.createThirdPartySlot_Dec().pyclass

createThirdPartySlotResponse = ns0.createThirdPartySlotResponse_Dec().pyclass

getThirdPartySlotsByStatementRequest = ns0.getThirdPartySlotsByStatement_Dec().pyclass

getThirdPartySlotsByStatementResponse = ns0.getThirdPartySlotsByStatementResponse_Dec().pyclass

performThirdPartySlotActionRequest = ns0.performThirdPartySlotAction_Dec().pyclass

performThirdPartySlotActionResponse = ns0.performThirdPartySlotActionResponse_Dec().pyclass

updateThirdPartySlotRequest = ns0.updateThirdPartySlot_Dec().pyclass

updateThirdPartySlotResponse = ns0.updateThirdPartySlotResponse_Dec().pyclass
